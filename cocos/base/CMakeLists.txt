
if(APPLE)
    set(COCOS_BASE_SPECIFIC_SRC
        base/CCController-apple.mm
        )
elseif(LINUX)
    set(COCOS_BASE_SPECIFIC_SRC
        base/CCController-linux-win32.cpp
        )
endif()

set(COCOS_BASE_HEADER
    base/CCValue.h
    base/CCEventListenerMouse.h
    base/utlist.h
    base/CCData.h
    base/ccMacros.h
    base/CCEventListenerKeyboard.h
    base/CCConsole.h
    base/CCController.h
    base/base64.h
    base/CCEventListenerController.h
    base/CCGameController.h
    base/CCEvent.h
    base/ccTypes.h
    base/CCAsyncTaskPool.h
    base/ccRandom.h
    base/CCRef.h
    base/CCProperties.h
    base/CCVector.h
    base/CCEventCustom.h
    base/CCEventKeyboard.h
    base/CCEventListenerCustom.h
    base/CCEventDispatcher.h
    base/uthash.h
    base/ccUtils.h
    base/CCEventController.h
    base/CCRefPtr.h
    base/CCDirector.h
    base/CCEventListenerFocus.h
    base/ccConfig.h
    base/ZipUtils.h
    base/CCMap.h
    base/ccUTF8.h
    base/CCEventFocus.h
    base/CCConfiguration.h
    base/CCProtocols.h
    base/CCEventMouse.h
    base/CCIMEDelegate.h
    base/CCNS.h
    base/CCAutoreleasePool.h
    base/CCStencilStateManager.h
    base/ccCArray.h
    base/CCEventListener.h
    base/CCScheduler.h
    base/CCEventType.h
    base/CCIMEDispatcher.h
    )

set(COCOS_BASE_SRC
    base/CCAsyncTaskPool.cpp
    base/CCAutoreleasePool.cpp
    base/CCConfiguration.cpp
    base/CCConsole.cpp
    base/CCController.cpp
    base/CCData.cpp
    base/CCDirector.cpp
    base/CCEvent.cpp
    base/CCEventController.cpp
    base/CCEventCustom.cpp
    base/CCEventDispatcher.cpp
    base/CCEventFocus.cpp
    base/CCEventKeyboard.cpp
    base/CCEventListener.cpp
    base/CCEventListenerController.cpp
    base/CCEventListenerCustom.cpp
    base/CCEventListenerFocus.cpp
    base/CCEventListenerKeyboard.cpp
    base/CCEventListenerMouse.cpp
    base/CCEventMouse.cpp
    base/CCIMEDispatcher.cpp
    base/CCNS.cpp
    base/CCProperties.cpp
    base/CCRef.cpp
    base/CCScheduler.cpp
    base/CCValue.cpp
    base/CCStencilStateManager.cpp
    base/ZipUtils.cpp
    base/base64.cpp
    base/ccCArray.cpp
    base/ccRandom.cpp
    base/ccTypes.cpp
    base/ccUTF8.cpp
    base/ccUtils.cpp
    ${COCOS_BASE_SPECIFIC_SRC}
    )
